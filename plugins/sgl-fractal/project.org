* sgl-fractal
** About
This package uses simple-gl to display fractals using GLSL.

** Example
#+begin_src lisp
  (ql:quickload '(:spacenav :simple-gl :sgl-fractal :3d-vectors :alexandria))
  (use-package :3d-vectors)
#+end_src

#+RESULTS:
: T

#+begin_src lisp
  (sgl:display (sgl-fractal:mandelbrot-viewer))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {10126A427B}> :STATUS :SCHEDULED {1012911BF3}>

#+begin_src lisp
  (sgl:display (sgl-fractal:cubic-mandelbrot-viewer))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {10225582DB}> :STATUS :SCHEDULED {1022558353}>

#+begin_src lisp
    (sgl:display (sgl-fractal:cubic-julia-set-viewer :real -0.3002491 :imag 0.6814959))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {10210E07DB}> :STATUS :RUNNING {102118C7A3}>

#+begin_src lisp
    (sgl:display (sgl-fractal:burning-ship-viewer))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {102221501B}> :STATUS :SCHEDULED {1022215093}>

#+begin_src lisp
    (sgl:display (sgl-fractal:cubic-bs-js-viewer
                  :real 0.5484568031713148d0 :imag -0.49384509731658854d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {10377FEDFB}> :STATUS :SCHEDULED {10377FEEA3}>

#+begin_src lisp
    (sgl:display (sgl-fractal:bs-js-viewer
                  :real -1.5057239992026854d0 :imag -0.4609143758687352d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {1062B302BB}> :STATUS :SCHEDULED {1062CD9C43}>

#+begin_src lisp
    (sgl:display (sgl-fractal:cubic-bs-js-viewer
                  :real 0.5292035989496411d0 :imag -0.5279432657162864d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {1065AC893B}> :STATUS :RUNNING {1065B7D1D3}>

#+begin_src lisp
    (sgl:display (sgl-fractal:bs-js-viewer
                  :real -0.328528436850382d0 :imag 0.18830130447285628d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {100B62E56B}> :STATUS :SCHEDULED {100B62E613}>

#+begin_src lisp
    (sgl:display (sgl-fractal:bs-js-real
                  :viewer -1.2979205493836528d0 :imag -0.025842545896878462d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {100AAFC06B}> :STATUS :SCHEDULED {100AAFC113}>

#+begin_src lisp
    (sgl:sgl-display-fractal:bs-js-viewer
                  :real 0.5202565197049642d0 :imag -0.6287315930374843d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {106A14F1CB}> :STATUS :SCHEDULED {106A14F273}>

#+begin_src lisp
    (sgl:display (sgl-fractal:bs-js-viewer
                  :real -0.9147363222395052d0 :imag -0.1615519494159263d0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {103815736B}> :STATUS :SCHEDULED {1038157413}>

#+begin_src lisp
    (sgl:display (sgl-fractal:cubic-bs-js-viewer
                  :real 0.5923823240474674D0 :imag 0.49177080397132106D0))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {100E80FA9B}> :STATUS :SCHEDULED {100E80FB43}>

#+begin_src lisp
    (sgl:display (sgl-fractal:cubic-bs-js-viewer :real -0.4922855 :imag -2.4807572))
#+end_src

#+begin_src lisp
    (multiple-value-bind (real imag) (alexandria:gaussian-random -2.0 2.0)
      (format t "location: ~a~%" (complex real imag))
      (sgl:display (sgl-fractal:julia-set-viewer :real real :imag imag)))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {10216DE1EB}> :STATUS :SCHEDULED {10216DE263}>

#+begin_src lisp
  (multiple-value-bind (real imag) (alexandria:gaussian-random -2.0 2.0)
    (format t "location: ~a~%" (complex real imag))
    (sgl:display (sgl-fractal:bs-js-viewer :max-iterations 123
                                           :real -0.504018353987933d0 :imag 0.059586248156519445d0)))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {1010D2D59B}> :STATUS :SCHEDULED {1010D2D643}>

#+begin_src lisp
    (multiple-value-bind (real imag) (alexandria:gaussian-random -2.0 2.0)
      (format t "location: ~a~%" (complex real imag))
      (sgl:display (sgl-fractal:bs-js-viewer :real real :imag imag)))
#+end_src

#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {1021D92BCB}> :STATUS :SCHEDULED {1021D92C83}>

#+begin_src lisp
  (multiple-value-bind (real imag) (alexandria:gaussian-random -2.0 2.0)
    (format t "location: ~a~%" (complex real imag))

    (sgl:display (sgl-fractal:cubic-bs-js-viewer :real real :imag imag)))

#+end_src
#+begin_src lisp
      (sgl:display (sgl-fractal:cubic-bs-js-viewer
                    :imag 0.8787302216838765d0
                    :real 0.23127537388437175d0))
#+end_src

#+begin_src lisp
  (sgl:display (sgl-fractal:bs-js-viewer
                
                :max-iterations  18000
                                         :imag 1 0.04371671571823295d0
                                         :real  -1.0147593226467166d0))
#+end_src
#+begin_src lisp
  (sgl:display (sgl-fractal:bs-js-viewer
                :max-iterations 679 
    :imag 0.2829317484715856d0
    :real -0.02127094713834414d0))
#+end_src



#+RESULTS:
: #<SIMPLE-TASKS:CALL-TASK :FUNC #<FUNCTION (LAMBDA () :IN SIMPLE-GL:DISPLAY) {1041C6110B}> :STATUS :SCHEDULED {1041C611B3}>

** TODO
*** Reduce copy/paste by setting complex fractal using a uniform

** License
ISC


Copyright (c) 2022 Jeremiah LaRocco <jeremiah_larocco@fastmail.com>

